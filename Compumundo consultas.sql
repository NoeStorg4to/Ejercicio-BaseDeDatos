USE Compumundo;

INSERT INTO CLIENTES (CLIENTE_ID, NOMBRE, DIRECCION, TELEFONO, EMAIL)
VALUES
(1, "Juan Pérez", "Calle Falsa 123 Sprinfield", 555-1234, "juan.perez@example.com"),
(2, "Ana Gómez", "Avenida Siempre Viva 456 Sprinfield", 555-5678, "ana.gomez@example.com"),
(3, "Carlos Fernández", "Plaza Central 789 Shelbyville", 555-8765, "carlos.fernandez@example.com"),
(4, "María López", "Calle Real 321 Shelbyville", 555-4321, "maria.lopez@example.com"),
(5, "Pedro Martínez", "Boulevard de los Sueños 654 Sprinfield", 555-9876, "pedro.martinez@example.com");

INSERT INTO PRODUCTOS (PRODUCTO_ID, NOMBRE, DESCRIPCION, PRECIO, STOCK)
VALUES
(101, "Laptop Gamer", "Laptop con procesador i7, 16GB RAM, 512GB SSD", 1500.00, 10),
(102, 'Monitor 24" Full HD', "Monitor LED 24 pulgadas, resolución Full HD", 200.00, 20),
(103, "Teclado Mecánico", "Teclado mecánico retroiluminado RGB", 80.00, 15),
(104, "Ratón Ergonómico", "Ratón ergonómico con ajuste de DPI", 50.00, 25),
(105, "Auriculares Gaming", "Auriculares con micrófono y sonido envolvente", 120.00, 30);

INSERT INTO VENTAS (VENTA_ID, CLIENTE_ID, FECHA, TOTAL)
VALUES
(1001, 1, "2024-08-01", 1680.00),
(1002, 2, "2024-08-02", 280.00),
(1003, 3, "2024-08-03", 80.00),
(1004, 4, "2024-08-04", 50.00),
(1005, 5, "2024-08-05", 120.00);

INSERT INTO DETALLE_VENTAS (DETALLE_ID, VENTA_ID, PRODUCTO_ID, CANTIDAD, SUBTOTAL)
VALUES
(10001, 1001, 101, 1, 1500.00),
(10002, 1002, 102, 1, 200.00),
(10003, 1003, 104, 1, 80.00),
(10004, 1004, 103, 1, 50.00),
(10005, 1005, 105, 1, 120.00);

UPDATE CLIENTES
SET DIRECCION = "Avenida del Sol 789, Ciudad", EMAIL = "juan.perez@nuevoemail.com", TELEFONO = "555-1111"
WHERE CLIENTE_ID = 1;

DELETE FROM DETALLE_VENTAS
WHERE VENTA_ID = 1003;

DELETE FROM VENTAS 
WHERE VENTA_ID = 1003;

CREATE INDEX IX_FECHAS ON VENTAS (FECHA);

EXPLAIN SELECT * FROM VENTAS WHERE FECHA = '2024-08-01';

-- 6

SELECT SUM(TOTAL) AS TOTAL_VENTAS FROM VENTAS -- SUMO LA COLUMNA TOTAL DE LA TABLA VENTAS. LE ASIGNO NOMBRE DE TOTAL_VENTAS
WHERE FECHA >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR); -- TOMO LA FECHA ACTUAL Y LE RESTO UN AÑO CON EL INTERVAL

CREATE VIEW V_TOTAL_VENTAS_ULTIMO_AÑO AS SELECT SUM(TOTAL) AS TOTAL_VENTAS FROM VENTAS
WHERE FECHA >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);

SELECT * FROM V_TOTAL_VENTAS_ULTIMO_AÑO;

SELECT C.NOMBRE, SUM(V.TOTAL) AS MONTO_TOTAL_COMPRAS FROM CLIENTES C
JOIN VENTAS V ON C.CLIENTE_ID = V.CLIENTE_ID -- DE LA TABLA VENTAS, EN EL ID DEL CLIENTE DE LA TABLACLIENTES, ASOCIALO A ID DEL CLIENTE DE LA TABLAVENTAS (EL FOREIGN)
GROUP BY C.NOMBRE; -- AGRUPA POR NOMBRE DE CADA CLIENTE

CREATE VIEW V_TOTAL_COMPRA_CLIENTES AS SELECT C.NOMBRE, SUM(V.TOTAL) AS MONTO_TOTAL_COMPRAS FROM CLIENTES C
JOIN VENTAS V ON C.CLIENTE_ID = V.CLIENTE_ID
GROUP BY C.NOMBRE;

SELECT * FROM V_TOTAL_COMPRA_CLIENTES;

SELECT V.FECHA, C.NOMBRE AS CLIENTE, P.NOMBRE AS PRODUCTO, DV.CANTIDAD, DV.SUBTOTAL FROM DETALLE_VENTAS DV
JOIN VENTAS V ON DV.VENTA_ID = V.VENTA_ID
JOIN CLIENTES C ON V.CLIENTE_ID = C.CLIENTE_ID
JOIN PRODUCTOS P ON DV.PRODUCTO_ID = P.PRODUCTO_ID;

CREATE VIEW V_DETALLE AS SELECT V.FECHA, C.NOMBRE AS CLIENTE, P.NOMBRE AS PRODUCTO, DV.CANTIDAD, DV.SUBTOTAL FROM DETALLE_VENTAS DV
JOIN VENTAS V ON DV.VENTA_ID = V.VENTA_ID
JOIN CLIENTES C ON V.CLIENTE_ID = C.CLIENTE_ID
JOIN PRODUCTOS P ON DV.PRODUCTO_ID = P.PRODUCTO_ID;

SELECT * FROM V_DETALLE;

CREATE VIEW V_TOTAL_CLIENTES_MAIL AS SELECT COUNT(*) AS TOTAL_CLIENTES FROM CLIENTES
WHERE EMAIL LIKE "%.com";

SELECT* FROM V_TOTAL_CLIENTES_MAIL;

DROP VIEW V_TOTAL_VENTAS_ULTIMO_AÑO;

-- 7
SELECT TABLE_NAME, TABLE_TYPE -- SI ES TABLA O VISTA
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = "Compumundo";

SHOW INDEX FROM VENTAS;

-- 8

ALTER TABLE VENTAS
ADD constraint CHK_TOTAL_POSITION CHECK(TOTAL > 0);



